{"ast":null,"code":"var _jsxFileName = \"/home/duke/Code/scandiweb/src/components/ProductDisplay.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchProductData } from \"../provider/pdpSlice\";\nimport { fetchProductById } from \"../provider/pIdSlice\";\nimport { handleSwitch } from \"../provider/csSlice\";\nimport { addIntoCart, removeFromCart, setNewAttributeSelectedIndex } from \"../provider/cartSlice\";\nimport \"./styles/PDP.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    productData: state.pdpSlice.value,\n    currencyIndex: state.csSlice.value,\n    productById: state.pIdReducer.value,\n    cartData: state.cartSlice.products,\n    attrData: state.cartSlice.attrData\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchProductData,\n  handleSwitch,\n  fetchProductById,\n  addIntoCart,\n  removeFromCart,\n  setNewAttributeSelectedIndex\n};\n\nclass ProductDisplay extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAddToCart = product => {\n      this.props.addIntoCart(product);\n    };\n\n    this.state = {\n      selectedAttributes: [],\n      imageSrc: this.props.productData.gallery[0]\n    };\n    this.handleAddToCart = this.handleAddToCart.bind(this);\n  }\n\n  setSelectedChip(attrName, attrindex) {\n    if (this.state.selectedAttributes.find(el => el.name === attrName)) {\n      const newSelectedAttributes = this.state.selectedAttributes.map(el => el.name === attrName ? { ...el,\n        selectedIndex: attrindex\n      } : el);\n      this.setState(() => ({\n        selectedAttributes: newSelectedAttributes\n      }));\n    } else {\n      this.setState(prevState => ({\n        selectedAttributes: [...prevState.selectedAttributes, {\n          name: attrName,\n          selectedIndex: attrindex\n        }]\n      }));\n    }\n\n    this.props.setNewAttributeSelectedIndex(attrName, attrindex);\n  }\n\n  componentDidMount() {\n    this.props.fetchProductById(this.props.productData.id);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PDP\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"small-imgs-con\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"small-imgs\",\n          children: this.props.productData.gallery.map(pic => {\n            return /*#__PURE__*/_jsxDEV(\"img\", {\n              src: pic,\n              alt: \"img\",\n              onClick: () => this.setState({\n                imageSrc: pic\n              })\n            }, Math.random(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"big-img\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.imageSrc,\n          alt: \"img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"desc\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pdp-brand\",\n          children: this.props.productById.brand\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pdp-name\",\n          children: this.props.productData.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), this.props.productById.attributes && this.props.productById.attributes.map((attr, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pdp-sizes\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [attr.name, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this), attr.items.map(item => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-con\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pdp-mid\",\n                  style: {\n                    backgroundColor: item.value,\n                    color: item.value\n                  },\n                  onClick: () => this.setSelectedChip(attr.name, index),\n                  children: item.value.includes(\"#\") ? \"\" : item.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 25\n                }, this)\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 23\n              }, this);\n            })]\n          }, attr.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pdp-price\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"PRICE:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), this.props.productData.prices[this.props.currencyIndex].currency.symbol, this.props.productData.prices[this.props.currencyIndex].amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pdp-btn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleAddToCart({\n              product: {\n                data: this.props.productById,\n                attributeData: this.state.selectedAttributes\n              }\n            }),\n            className: this.props.productById.inStock ? \"\" : \"nostock\",\n            disabled: !this.props.productById.inStock,\n            children: this.props.productById.inStock ? \"ADD TO CART\" : \"ITEM NOT IN STOCK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"desc\",\n          dangerouslySetInnerHTML: {\n            __html: this.props.productById.description\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDisplay);","map":{"version":3,"sources":["/home/duke/Code/scandiweb/src/components/ProductDisplay.jsx"],"names":["React","Component","connect","fetchProductData","fetchProductById","handleSwitch","addIntoCart","removeFromCart","setNewAttributeSelectedIndex","mapStateToProps","state","productData","pdpSlice","value","currencyIndex","csSlice","productById","pIdReducer","cartData","cartSlice","products","attrData","mapDispatchToProps","ProductDisplay","constructor","props","handleAddToCart","product","selectedAttributes","imageSrc","gallery","bind","setSelectedChip","attrName","attrindex","find","el","name","newSelectedAttributes","map","selectedIndex","setState","prevState","componentDidMount","id","render","pic","Math","random","brand","attributes","attr","index","items","item","backgroundColor","color","includes","prices","currency","symbol","amount","data","attributeData","inStock","__html","description"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchProductData } from \"../provider/pdpSlice\";\nimport { fetchProductById } from \"../provider/pIdSlice\";\nimport { handleSwitch } from \"../provider/csSlice\";\nimport {\n  addIntoCart,\n  removeFromCart,\n  setNewAttributeSelectedIndex,\n} from \"../provider/cartSlice\";\nimport \"./styles/PDP.css\";\n\nconst mapStateToProps = (state) => {\n  return {\n    productData: state.pdpSlice.value,\n    currencyIndex: state.csSlice.value,\n    productById: state.pIdReducer.value,\n    cartData: state.cartSlice.products,\n    attrData: state.cartSlice.attrData,\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchProductData,\n  handleSwitch,\n  fetchProductById,\n  addIntoCart,\n  removeFromCart,\n  setNewAttributeSelectedIndex,\n};\n\nclass ProductDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedAttributes: [],\n      imageSrc: this.props.productData.gallery[0],\n    };\n    this.handleAddToCart = this.handleAddToCart.bind(this);\n  }\n\n  handleAddToCart = (product) => {\n    this.props.addIntoCart(product);\n  };\n\n  setSelectedChip(attrName, attrindex) {\n    if (this.state.selectedAttributes.find((el) => el.name === attrName)) {\n      const newSelectedAttributes = this.state.selectedAttributes.map((el) =>\n        el.name === attrName\n          ? {\n              ...el,\n              selectedIndex: attrindex,\n            }\n          : el\n      );\n      this.setState(() => ({ selectedAttributes: newSelectedAttributes }));\n    } else {\n      this.setState((prevState) => ({\n        selectedAttributes: [\n          ...prevState.selectedAttributes,\n          {\n            name: attrName,\n            selectedIndex: attrindex,\n          },\n        ],\n      }));\n    }\n\n    this.props.setNewAttributeSelectedIndex(attrName, attrindex);\n  }\n\n  componentDidMount() {\n    this.props.fetchProductById(this.props.productData.id);\n  }\n\n  render() {\n    return (\n      <div className=\"PDP\">\n        <div className=\"small-imgs-con\">\n          <div className=\"small-imgs\">\n            {this.props.productData.gallery.map((pic) => {\n              return (\n                <img\n                  key={Math.random()}\n                  src={pic}\n                  alt=\"img\"\n                  onClick={() => this.setState({ imageSrc: pic })}\n                />\n              );\n            })}\n          </div>\n        </div>\n\n        <div className=\"big-img\">\n          <img src={this.state.imageSrc} alt=\"img\" />\n        </div>\n        <div className=\"desc\">\n          <div className=\"pdp-brand\">{this.props.productById.brand}</div>\n          <div className=\"pdp-name\">{this.props.productData.name}</div>\n          {this.props.productById.attributes &&\n            this.props.productById.attributes.map((attr, index) => {\n              return (\n                <div key={attr.id} className=\"pdp-sizes\">\n                  <span>{attr.name}:</span>\n                  {attr.items.map((item) => {\n                    return (\n                      <div key={item.id} className=\"item-con\">\n                        <div\n                          className=\"pdp-mid\"\n                          style={{\n                            backgroundColor: item.value,\n                            color: item.value,\n                          }}\n                          onClick={() => this.setSelectedChip(attr.name, index)}\n                        >\n                          {item.value.includes(\"#\") ? \"\" : item.value}\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              );\n            })}\n          <div className=\"pdp-price\">\n            <span>PRICE:</span>\n            {\n              this.props.productData.prices[this.props.currencyIndex].currency\n                .symbol\n            }\n            {this.props.productData.prices[this.props.currencyIndex].amount}\n          </div>\n          <div className=\"pdp-btn\">\n            <button\n              onClick={() =>\n                this.handleAddToCart({\n                  product: {\n                    data: this.props.productById,\n                    attributeData: this.state.selectedAttributes,\n                  },\n                })\n              }\n              className={this.props.productById.inStock ? \"\" : \"nostock\"}\n              disabled={!this.props.productById.inStock}\n            >\n              {this.props.productById.inStock\n                ? \"ADD TO CART\"\n                : \"ITEM NOT IN STOCK\"}\n            </button>\n          </div>\n          <div\n            className=\"desc\"\n            dangerouslySetInnerHTML={{\n              __html: this.props.productById.description,\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDisplay);\n"]},"metadata":{},"sourceType":"module"}