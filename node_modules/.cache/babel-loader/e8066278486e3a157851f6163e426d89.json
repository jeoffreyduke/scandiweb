{"ast":null,"code":"var _jsxFileName = \"/home/duke/Code/scandiweb/src/components/Cart.jsx\";\nimport React, { Component } from \"react\";\nimport Product from \"./Product\";\nimport { connect } from \"react-redux\";\nimport { addIntoCart, removeFromCart } from \"../provider/cartSlice\";\nimport { handleSwitch } from \"../provider/csSlice\";\nimport { incrementCounter } from \"../provider/counterSlice\";\nimport \"./styles/Cart.css\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    cartData: state.cartSlice.products,\n    price: state.pdpSlice.value.prices,\n    cartSize: state.cartSlice.totalItemQuantity,\n    currencyIndex: state.csSlice.value,\n    counter: state.counterSlice.value\n  };\n};\n\nconst mapDispatchToProps = {\n  addIntoCart,\n  removeFromCart,\n  handleSwitch,\n  incrementCounter\n};\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 1\n    };\n    this.addTax = this.addTax.bind(this);\n  }\n\n  incrementTotalPrice(tempTotalPrice, item) {\n    let totalPrice = tempTotalPrice;\n\n    for (let i = 0; i < item.quantity; i += 1) {\n      const price = item.product.data.prices[this.props.currencyIndex];\n      totalPrice += price.amount;\n    }\n\n    return totalPrice;\n  }\n\n  addTax(size) {\n    return size * 5;\n  }\n\n  render() {\n    var _this$props$cartData;\n\n    let tempTotalPrice = 0;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Cart\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"CART\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), (_this$props$cartData = this.props.cartData) === null || _this$props$cartData === void 0 ? void 0 : _this$props$cartData.map(products => {\n        tempTotalPrice = this.incrementTotalPrice(tempTotalPrice, products);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-item\",\n          children: /*#__PURE__*/_jsxDEV(Product, {\n            products: products,\n            prices: products.product.data.prices[this.props.currencyIndex],\n            productId: products.id,\n            productName: products.product.data.name,\n            productBrand: products.product.data.brand,\n            productImage: products.product.data.gallery[0],\n            productQuantity: products.quantity,\n            productAttr: products.product.data.attributes,\n            productAttrData: products.product.attributeData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, Math.random() + products.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extras\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tax\",\n          children: [\"Tax:\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [this.props.price[this.props.currencyIndex].currency.symbol, this.addTax(this.props.cartSize)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"qty\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Qty: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: this.props.cartSize\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"total\",\n          children: [\"Total:\", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [this.props.price[this.props.currencyIndex].currency.symbol, Math.round((tempTotalPrice + Number.EPSILON) * 100) / 100 + this.addTax(this.props.cartSize)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"order-btn\",\n            children: \"Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","map":{"version":3,"sources":["/home/duke/Code/scandiweb/src/components/Cart.jsx"],"names":["React","Component","Product","connect","addIntoCart","removeFromCart","handleSwitch","incrementCounter","Link","mapStateToProps","state","cartData","cartSlice","products","price","pdpSlice","value","prices","cartSize","totalItemQuantity","currencyIndex","csSlice","counter","counterSlice","mapDispatchToProps","Cart","constructor","props","addTax","bind","incrementTotalPrice","tempTotalPrice","item","totalPrice","i","quantity","product","data","amount","size","render","map","id","name","brand","gallery","attributes","attributeData","Math","random","currency","symbol","round","Number","EPSILON"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Product from \"./Product\";\nimport { connect } from \"react-redux\";\nimport { addIntoCart, removeFromCart } from \"../provider/cartSlice\";\nimport { handleSwitch } from \"../provider/csSlice\";\nimport { incrementCounter } from \"../provider/counterSlice\";\nimport \"./styles/Cart.css\";\nimport { Link } from \"react-router-dom\";\n\nconst mapStateToProps = (state) => {\n  return {\n    cartData: state.cartSlice.products,\n    price: state.pdpSlice.value.prices,\n    cartSize: state.cartSlice.totalItemQuantity,\n    currencyIndex: state.csSlice.value,\n    counter: state.counterSlice.value,\n  };\n};\n\nconst mapDispatchToProps = {\n  addIntoCart,\n  removeFromCart,\n  handleSwitch,\n  incrementCounter,\n};\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 1,\n    };\n    this.addTax = this.addTax.bind(this);\n  }\n\n  incrementTotalPrice(tempTotalPrice, item) {\n    let totalPrice = tempTotalPrice;\n    for (let i = 0; i < item.quantity; i += 1) {\n      const price = item.product.data.prices[this.props.currencyIndex];\n      totalPrice += price.amount;\n    }\n    return totalPrice;\n  }\n\n  addTax(size) {\n    return size * 5;\n  }\n\n  render() {\n    let tempTotalPrice = 0;\n    return (\n      <div className=\"Cart\">\n        <p>CART</p>\n        {this.props.cartData?.map((products) => {\n          tempTotalPrice = this.incrementTotalPrice(tempTotalPrice, products);\n          return (\n            <div key={Math.random() + products.id} className=\"cart-item\">\n              <Product\n                products={products}\n                prices={products.product.data.prices[this.props.currencyIndex]}\n                productId={products.id}\n                productName={products.product.data.name}\n                productBrand={products.product.data.brand}\n                productImage={products.product.data.gallery[0]}\n                productQuantity={products.quantity}\n                productAttr={products.product.data.attributes}\n                productAttrData={products.product.attributeData}\n              />\n            </div>\n          );\n        })}\n\n        <div className=\"extras\">\n          <div className=\"tax\">\n            Tax:{\" \"}\n            <strong>\n              {this.props.price[this.props.currencyIndex].currency.symbol}\n              {this.addTax(this.props.cartSize)}\n            </strong>\n          </div>\n          <div className=\"qty\">\n            <span>\n              Qty: <strong>{this.props.cartSize}</strong>\n            </span>\n          </div>\n\n          <div className=\"total\">\n            Total:\n            <strong>\n              {this.props.price[this.props.currencyIndex].currency.symbol}\n              {Math.round((tempTotalPrice + Number.EPSILON) * 100) / 100 +\n                this.addTax(this.props.cartSize)}\n            </strong>\n          </div>\n          <Link to=\"/\">\n            <button className=\"order-btn\">Order</button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n"]},"metadata":{},"sourceType":"module"}