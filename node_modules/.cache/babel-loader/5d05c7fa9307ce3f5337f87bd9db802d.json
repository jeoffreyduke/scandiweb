{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { ApiFetchAllData } from \"../api/storeApi\";\nexport const fetchData = createAsyncThunk(\"data/fetch_data\", async () => {\n  const res = await ApiFetchAllData();\n  return res;\n});\nexport const globalSlice = createSlice({\n  name: \"global\",\n  initialState: {\n    value: [],\n    status: \"\"\n  },\n\n  extraReducers(builder) {\n    builder.addCase(fetchData.pending, () => {\n      return {\n        value: [],\n        status: \"loading\"\n      };\n    });\n    builder.addCase(fetchData.fulfilled, (state, action) => {\n      return {\n        value: action.payload.data,\n        status: \"success\"\n      };\n    });\n    builder.addCase(fetchData.rejected, () => {\n      return {\n        value: [],\n        status: \"error\"\n      };\n    });\n  }\n\n});\nexport const globalReducer = globalSlice.reducer;","map":{"version":3,"sources":["/home/duke/Code/scandiweb/src/provider/globalSlice.js"],"names":["createSlice","createAsyncThunk","ApiFetchAllData","fetchData","res","globalSlice","name","initialState","value","status","extraReducers","builder","addCase","pending","fulfilled","state","action","payload","data","rejected","globalReducer","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,SAASC,eAAT,QAAgC,iBAAhC;AAEA,OAAO,MAAMC,SAAS,GAAGF,gBAAgB,CAAC,iBAAD,EAAoB,YAAY;AACvE,QAAMG,GAAG,GAAG,MAAMF,eAAe,EAAjC;AACA,SAAOE,GAAP;AACD,CAHwC,CAAlC;AAKP,OAAO,MAAMC,WAAW,GAAGL,WAAW,CAAC;AACrCM,EAAAA,IAAI,EAAE,QAD+B;AAErCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,MAAM,EAAE;AAFI,GAFuB;;AAMrCC,EAAAA,aAAa,CAACC,OAAD,EAAU;AACrBA,IAAAA,OAAO,CAACC,OAAR,CAAgBT,SAAS,CAACU,OAA1B,EAAmC,MAAM;AACvC,aAAO;AACLL,QAAAA,KAAK,EAAE,EADF;AAELC,QAAAA,MAAM,EAAE;AAFH,OAAP;AAID,KALD;AAMAE,IAAAA,OAAO,CAACC,OAAR,CAAgBT,SAAS,CAACW,SAA1B,EAAqC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtD,aAAO;AACLR,QAAAA,KAAK,EAAEQ,MAAM,CAACC,OAAP,CAAeC,IADjB;AAELT,QAAAA,MAAM,EAAE;AAFH,OAAP;AAID,KALD;AAMAE,IAAAA,OAAO,CAACC,OAAR,CAAgBT,SAAS,CAACgB,QAA1B,EAAoC,MAAM;AACxC,aAAO;AACLX,QAAAA,KAAK,EAAE,EADF;AAELC,QAAAA,MAAM,EAAE;AAFH,OAAP;AAID,KALD;AAMD;;AAzBoC,CAAD,CAA/B;AA4BP,OAAO,MAAMW,aAAa,GAAGf,WAAW,CAACgB,OAAlC","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { ApiFetchAllData } from \"../api/storeApi\";\n\nexport const fetchData = createAsyncThunk(\"data/fetch_data\", async () => {\n  const res = await ApiFetchAllData();\n  return res;\n});\n\nexport const globalSlice = createSlice({\n  name: \"global\",\n  initialState: {\n    value: [],\n    status: \"\",\n  },\n  extraReducers(builder) {\n    builder.addCase(fetchData.pending, () => {\n      return {\n        value: [],\n        status: \"loading\",\n      };\n    });\n    builder.addCase(fetchData.fulfilled, (state, action) => {\n      return {\n        value: action.payload.data,\n        status: \"success\",\n      };\n    });\n    builder.addCase(fetchData.rejected, () => {\n      return {\n        value: [],\n        status: \"error\",\n      };\n    });\n  },\n});\n\nexport const globalReducer = globalSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}